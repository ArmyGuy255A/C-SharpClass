// <auto-generated />
using EFCoreShapes.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreShapes.Migrations
{
    [DbContext(typeof(ShapesContext))]
    [Migration("20210311193739_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreShapes.Models.Shape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfSides")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Shapes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Shape");
                });

            modelBuilder.Entity("EFCoreShapes.Models.Circle", b =>
                {
                    b.HasBaseType("EFCoreShapes.Models.Shape");

                    b.Property<int>("radius")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Circle");
                });

            modelBuilder.Entity("EFCoreShapes.Models.Rectangle", b =>
                {
                    b.HasBaseType("EFCoreShapes.Models.Shape");

                    b.Property<int>("height")
                        .HasColumnType("int");

                    b.Property<int>("width")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Rectangle");
                });

            modelBuilder.Entity("EFCoreShapes.Models.Triangle", b =>
                {
                    b.HasBaseType("EFCoreShapes.Models.Shape");

                    b.Property<int>("a")
                        .HasColumnType("int");

                    b.Property<int>("b")
                        .HasColumnType("int");

                    b.Property<int>("c")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Triangle");
                });
#pragma warning restore 612, 618
        }
    }
}
